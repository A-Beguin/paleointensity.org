################################################
### Demo Data pseudo Thellier Generic Format ###
################################################

# For each the specimens RE01
# there is the full data set, and a custom made selection
# RE01 selection is from 2.5 to 50 mT


_data_RE01 = [
    ["RE01", "x2", 1.22E-05, 1.13E-05, -9.62E-06, 0.99, 47.23054137, -30.09457528, 1.91928E-05, "2017-03-20", "17:04", 0, 0, 0, 0, 0, 0],
    ["RE01", "x2", 1.21E-05, 9.91E-06, -1.01E-05, 0.99, 50.58724958, -32.89842286, 1.85989E-05, "2017-03-20", "17:04", 2.5, 0, 0, 0, 0, 0],
    ["RE01", "x2", 1.24E-05, 1.01E-05, -7.82E-06, 0.99, 50.64160255, -26.08715944, 1.77876E-05, "2017-03-20", "17:04", 2.5, 40, 0, 90, 1, 2.5],
    ["RE01", "x2", 1.09E-05, 8.67E-06, -9.19E-06, 0.99, 51.58647142, -33.37219474, 1.67066E-05, "2017-03-20", "17:04", 5, 0, 0, 0, 0, 2.5],
    ["RE01", "x2", 1.12E-05, 8.85E-06, -5.72E-06, 0.99, 51.79789683, -21.77508116, 1.54136E-05, "2017-03-20", "17:04", 5, 40, 0, 90, 1, 5],
    ["RE01", "x2", 9.58E-06, 7.43E-06, -8.08E-06, 0.99, 52.18844155, -33.67517173, 1.45665E-05, "2017-03-20", "17:04", 7.5, 0, 0, 0, 0, 5],
    ["RE01", "x2", 9.90E-06, 7.63E-06, -3.17E-06, 0.99, 52.39625038, -14.24015946, 1.28983E-05, "2017-03-20", "17:04", 7.5, 40, 0, 90, 1, 7.5],
    ["RE01", "x2", 8.19E-06, 6.19E-06, -6.85E-06, 0.99, 52.92217746, -33.72665671, 1.23451E-05, "2017-03-20", "17:04", 10, 0, 0, 0, 0, 7.5],
    ["RE01", "x2", 8.54E-06, 6.41E-06, -2.12E-07, 0.99, 53.12293559, -1.138700579, 1.0683E-05, "2017-03-20", "17:04", 10, 40, 0, 90, 1, 10],
    ["RE01", "x2", 6.39E-06, 4.72E-06, -5.26E-06, 0.99, 53.53861094, -33.52721978, 9.52632E-06, "2017-03-20", "17:04", 15, 0, 0, 0, 0, 10],
    ["RE01", "x2", 6.75E-06, 4.86E-06, 3.82E-06, 0.99, 54.21220161, 24.64603071, 9.14868E-06, "2017-03-20", "17:04", 15, 40, 0, 90, 1, 15],
    ["RE01", "x2", 5.27E-06, 3.82E-06, -4.26E-06, 0.99, 54.03614562, -33.20227517, 7.7831E-06, "2017-03-20", "17:04", 20, 0, 0, 0, 0, 15],
    ["RE01", "x2", 5.66E-06, 3.94E-06, 6.42E-06, 0.99, 55.1271357, 42.9419545, 9.42082E-06, "2017-03-20", "17:04", 20, 40, 0, 90, 1, 20],
    ["RE01", "x2", 4.45E-06, 3.26E-06, -3.49E-06, 0.99, 53.76432176, -32.35356125, 6.52574E-06, "2017-03-20", "17:04", 25, 0, 0, 0, 0, 20],
    ["RE01", "x2", 4.85E-06, 3.44E-06, 8.37E-06, 0.99, 54.61024085, 54.62232939, 1.02677E-05, "2017-03-20", "17:04", 25, 40, 0, 90, 1, 25],
    ["RE01", "x2", 3.71E-06, 2.72E-06, -2.95E-06, 0.99, 53.80951437, -32.70834086, 5.46633E-06, "2017-03-20", "17:04", 30, 0, 0, 0, 0, 25],
    ["RE01", "x2", 4.13E-06, 2.96E-06, 9.88E-06, 0.99, 54.33075746, 62.77437823, 1.11067E-05, "2017-03-20", "17:04", 30, 40, 0, 90, 1, 30],
    ["RE01", "x2", 2.77E-06, 2.03E-06, -2.13E-06, 0.99, 53.74670067, -31.76244276, 4.03724E-06, "2017-03-20", "17:04", 40, 0, 0, 0, 0, 30],
    ["RE01", "x2", 3.22E-06, 2.36E-06, 1.20E-05, 0.99, 53.79352714, 71.55934503, 1.26293E-05, "2017-03-20", "17:04", 40, 40, 0, 90, 1, 40],
    ["RE01", "x2", 1.96E-06, 1.47E-06, -1.47E-06, 0.99, 53.17788357, -31.01999666, 2.85444E-06, "2017-03-20", "17:04", 50, 0, 0, 0, 0, 40],
    ["RE01", "x2", 2.42E-06, 1.69E-06, 1.37E-05, 0.99, 55.1430192, 77.82284276, 1.39969E-05, "2017-03-20", "17:04", 50, 40, 0, 90, 1, 50],
    ["RE01", "x2", 1.41E-06, 1.07E-06, -9.37E-07, 0.99, 52.87762838, -27.88308927, 2.00261E-06, "2017-03-20", "17:04", 60, 0, 0, 0, 0, 50],
    ["RE01", "x2", 1.92E-06, 1.25E-06, 1.50E-05, 0.99, 56.89503668, 81.32150002, 1.51539E-05, "2017-03-20", "17:04", 60, 40, 0, 90, 1, 60],
    ["RE01", "x2", 1.11E-06, 8.82E-07, -6.67E-07, 0.99, 51.65095593, -25.1509888, 1.56982E-06, "2017-03-20", "17:04", 70, 0, 0, 0, 0, 60],
    ["RE01", "x2", 1.67E-06, 1.33E-06, 1.59E-05, 0.99, 51.52000079, 82.34529061, 1.60498E-05, "2017-03-20", "17:04", 70, 40, 0, 90, 1, 70],
    ["RE01", "x2", 1.03E-06, 7.84E-07, -5.53E-07, 0.99, 52.8390549, -23.07718928, 1.41059E-06, "2017-03-20", "17:04", 80, 0, 0, 0, 0, 70],
    ["RE01", "x2", 1.57E-06, 1.13E-06, 1.64E-05, 0.99, 54.1268358, 83.28255978, 1.65245E-05, "2017-03-20", "17:04", 80, 40, 0, 90, 1, 80],
    ["RE01", "x2", 7.67E-07, 6.68E-07, -3.67E-07, 0.99, 48.94003413, -19.86207886, 1.08148E-06, "2017-03-20", "17:04", 100, 0, 0, 0, 0, 80],
    ["RE01", "x2", 1.36E-06, 1.05E-06, 1.72E-05, 0.99, 52.32133951, 84.30159312, 1.73312E-05, "2017-03-20", "17:04", 100, 40, 0, 90, 1, 100],
    ["RE01", "x2", 5.62E-07, 4.41E-07, -1.13E-07, 0.99, 51.88427477, -9.002086428, 7.23843E-07, "2017-03-20", "17:04", 150, 0, 0, 0, 0, 100],
    ["RE01", "x2", 1.20E-06, 1.03E-06, 1.84E-05, 0.99, 49.53977437, 85.07794085, 1.84377E-05, "2017-03-20", "17:04", 150, 40, 0, 90, 1, 150]
]
_data_RE01_selection = [
    ["RE01", "x2", 1.09E-05, 8.67E-06, -9.19E-06, 0.99, 51.58647142, -33.37219474, 1.67066E-05, "2017-03-20", "17:04", 5, 0, 0, 0, 0, 2.5],
    ["RE01", "x2", 1.12E-05, 8.85E-06, -5.72E-06, 0.99, 51.79789683, -21.77508116, 1.54136E-05, "2017-03-20", "17:04", 5, 40, 0, 90, 1, 5],
    ["RE01", "x2", 9.58E-06, 7.43E-06, -8.08E-06, 0.99, 52.18844155, -33.67517173, 1.45665E-05, "2017-03-20", "17:04", 7.5, 0, 0, 0, 0, 5],
    ["RE01", "x2", 9.90E-06, 7.63E-06, -3.17E-06, 0.99, 52.39625038, -14.24015946, 1.28983E-05, "2017-03-20", "17:04", 7.5, 40, 0, 90, 1, 7.5],
    ["RE01", "x2", 8.19E-06, 6.19E-06, -6.85E-06, 0.99, 52.92217746, -33.72665671, 1.23451E-05, "2017-03-20", "17:04", 10, 0, 0, 0, 0, 7.5],
    ["RE01", "x2", 8.54E-06, 6.41E-06, -2.12E-07, 0.99, 53.12293559, -1.138700579, 1.0683E-05, "2017-03-20", "17:04", 10, 40, 0, 90, 1, 10],
    ["RE01", "x2", 6.39E-06, 4.72E-06, -5.26E-06, 0.99, 53.53861094, -33.52721978, 9.52632E-06, "2017-03-20", "17:04", 15, 0, 0, 0, 0, 10],
    ["RE01", "x2", 6.75E-06, 4.86E-06, 3.82E-06, 0.99, 54.21220161, 24.64603071, 9.14868E-06, "2017-03-20", "17:04", 15, 40, 0, 90, 1, 15],
    ["RE01", "x2", 5.27E-06, 3.82E-06, -4.26E-06, 0.99, 54.03614562, -33.20227517, 7.7831E-06, "2017-03-20", "17:04", 20, 0, 0, 0, 0, 15],
    ["RE01", "x2", 5.66E-06, 3.94E-06, 6.42E-06, 0.99, 55.1271357, 42.9419545, 9.42082E-06, "2017-03-20", "17:04", 20, 40, 0, 90, 1, 20],
    ["RE01", "x2", 4.45E-06, 3.26E-06, -3.49E-06, 0.99, 53.76432176, -32.35356125, 6.52574E-06, "2017-03-20", "17:04", 25, 0, 0, 0, 0, 20],
    ["RE01", "x2", 4.85E-06, 3.44E-06, 8.37E-06, 0.99, 54.61024085, 54.62232939, 1.02677E-05, "2017-03-20", "17:04", 25, 40, 0, 90, 1, 25],
    ["RE01", "x2", 3.71E-06, 2.72E-06, -2.95E-06, 0.99, 53.80951437, -32.70834086, 5.46633E-06, "2017-03-20", "17:04", 30, 0, 0, 0, 0, 25],
    ["RE01", "x2", 4.13E-06, 2.96E-06, 9.88E-06, 0.99, 54.33075746, 62.77437823, 1.11067E-05, "2017-03-20", "17:04", 30, 40, 0, 90, 1, 30],
    ["RE01", "x2", 2.77E-06, 2.03E-06, -2.13E-06, 0.99, 53.74670067, -31.76244276, 4.03724E-06, "2017-03-20", "17:04", 40, 0, 0, 0, 0, 30],
    ["RE01", "x2", 3.22E-06, 2.36E-06, 1.20E-05, 0.99, 53.79352714, 71.55934503, 1.26293E-05, "2017-03-20", "17:04", 40, 40, 0, 90, 1, 40],
    ["RE01", "x2", 1.96E-06, 1.47E-06, -1.47E-06, 0.99, 53.17788357, -31.01999666, 2.85444E-06, "2017-03-20", "17:04", 50, 0, 0, 0, 0, 40],
    ["RE01", "x2", 2.42E-06, 1.69E-06, 1.37E-05, 0.99, 55.1430192, 77.82284276, 1.39969E-05, "2017-03-20", "17:04", 50, 40, 0, 90, 1, 50],
]



#################
###   logic   ###
#################

_dataset_dict = {
    "RE01": _data_RE01,
}

_dataset_selection_dict = {
    "RE01": _data_RE01_selection,
}


def get(specimen, selection=False):

    # select the right dataset dictionary
    dict = _dataset_dict
    if selection:
        dict = _dataset_selection_dict

    # check if the specimen is in the dict
    if (specimen in dict) == False:
        print("WARNING: the specimen %s is not present in the demo data, asked for a selection: %s" % (specimen, selection))
        return []
    else:
        return _demo_data_to_real_format_thermal(dict[specimen])


def _demo_data_to_real_format_thermal(l):
    result = []
    for msrmt in l:
        result.append({
            "site": msrmt[0],
            "specimen": msrmt[1],
            "x": msrmt[2],
            "y": msrmt[3],
            "z": msrmt[4],
            "error": msrmt[5],
            "dec": msrmt[6],
            "inc": msrmt[7],
            "total_m": msrmt[8],
            "date": msrmt[9],
            "time": msrmt[10],
            "step": msrmt[11],
            "lab_field": msrmt[12],
            "lab_field_dec": msrmt[13],
            "lab_field_inc": msrmt[14],
            "type": msrmt[15],
            "previous_step": msrmt[16]
        })
    return result
